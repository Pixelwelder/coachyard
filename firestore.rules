rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**}/documents {
      allow read, write: if false;
    }

    match /users/{uid} {
      allow read: if true;
      allow write: if request.auth.uid == uid;
    }

    // Currently unused since we update/delete through cloud functions.
    match /invites/{uid} {
      allow read: if isCreator() || isInvited();
      allow write: if isCreator();
    }

    match /courses/{uid} {
      allow list: if true;
      allow get: if isCreator() || isEnrolled();
      allow write: if isCreator();

      function isEnrolled() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.enrolled[uid] != null;
      }
    }

    match /items/{uid} {
      allow list: if true;
      allow get: if isCreator() || isEnrolledInParentCourse();
      allow write: if isCreator() || isEnrolledInParentCourse();

      function isEnrolledInParentCourse() {
        let parentCourse = get(/databases/$(database)/documents/courses/$(resource.data.courseUid));
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.enrolled[parentCourse.uid] != null;
      }
    }

    match /stripe_customers/{uid} {
      allow read, write: if request.auth.uid == uid;

      match /payment_methods/{id} {
        allow read, write: if request.auth.uid == uid;
      }
      match /payments/{id} {
        allow read, write: if request.auth.uid == uid;
      }
    }

    function isSignedIn() {
      return request.auth != null;
    }

    function isCreator() {
      return resource.data.creatorUid == request.auth.uid;
    }

    function isInvited() {
      return resource.data.email == request.auth.token.email;
    }
  }
}
